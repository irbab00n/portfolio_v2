@mixin flex {
  display: -webkit-box;  // for Safari
  display: -ms-flexbox;  // for IE
  display: flex;  // for Everything else
}

@mixin flex-column {
  -webkit-box-orient: vertical;  // for Safari
  -webkit-box-direction: normal;
  -ms-flex-direction: column;  // for IE
  flex-direction: column;  // for everything else
}

// Flex Align Mixins

@mixin align-center {
  -webkit-box-align: center;  // for Safari
  -ms-flex-align: center;  // for IE
  align-items: center;  // for everything else
}

// Flex Justify Mixins

@mixin justify-center {
  -webkit-box-pack: center;  // for Safari
  -ms-flex-pack: center;  // for IE
  justify-content: center;  // for everything else
}

@mixin justify-start {
  -webkit-box-pack: start;  // for Safari
  -ms-flex-pack: start;  // for IE
  justify-content: flex-start;  // for everything else
}

@mixin justify-end {
  -webkit-box-pack: end;  // for Safari
  -ms-flex-pack: end;  // for IE
  justify-content: flex-end;  // for everything else
}


// Height Mixins

@mixin full-height {
  min-height: 100vh;
}

// Width Mixins

@mixin full-width {
  min-width: 100vw;
}



// Box-Shadow Mixins

@mixin std-box-shadow {
  -webkit-box-shadow: 0 0.5vh 0.5vh $standard-shadow;
  box-shadow: 0 0.2vh 0.5vh $standard-shadow;
}


// Transition Mixins

// pass in any number of 

@mixin animation($animate...) {

  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {

    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }

  }

  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;

}

@mixin keyframes($animationName) {

  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }

}

/*

EXAMPLE USAGE OF ANIMATE & KEYFRAMES @mixins

@include keyframes(move-the-object) {
  0%   { left: 100px; }
  100% { left: 200px; }
}

.object-to-animate {
  @include animation('move-the-object .5s 1', 'move-the-object-again .5s 1 .5s');
} 

*/

// Mobile Menu Mixins

@mixin mobile-nav-toggle-active($rotate) {
  background-color: $bg-mobile-nav-active;
  -webkit-transform: rotate($rotate);
  transform: rotate($rotate);
}

@mixin menu-bar($height, $top-spacing) {
  background-color: $bg-mobile-nav-inactive;
  content: "";
  cursor: pointer;
  display: block;
  height: $height;
  position: absolute;
  top: $top-spacing;
  width: 100%;
  transition: $standard-transition;
}

// PERSPECTIVE Mixins

@mixin perspective($value) {
  -webkit-perspective: $value;
  perspective: $value;
}

@mixin perspective-preserve-3d {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

@mixin perspective-rotate-x($value) {
  -webkit-transform: rotateX($value);
  transform: rotateX($value);
}

@mixin perspective-rotate-y($value) {
  -webkit-transform: rotateY($value);
  transform: rotateY($value);
}

@mixin translate($x: 0vw, $y: 0vh) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  transform: translate($x, $y)
}

/*
  Image Rotation Mixins
*/
@mixin flipImage() {
  -moz-transform: scaleX(-1);
  -o-transform: scaleX(-1);
  -webkit-transform: scaleX(-1);
  transform: scaleX(-1);
  filter: FlipH;
  -ms-filter: “FlipH”;
}








































